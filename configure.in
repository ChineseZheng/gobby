#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)
AC_INIT([gobby], [0.2.0], [crew@0x539.de])
AM_INIT_AUTOMAKE(1.9 check-news)
AC_CONFIG_SRCDIR([inc/window.hpp])
AC_CONFIG_HEADER([inc/features.hpp])

# Extract host information.
AC_CANONICAL_HOST

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_CACHE_SAVE

AC_MSG_CHECKING([whether to enable WIN32 specific flags])
if test "x$host_os" = "xmingw32" ; then
        win32=true
        AC_MSG_RESULT([yes])
else
        win32=false
        AC_MSG_RESULT([no])
fi
AM_CONDITIONAL(WIN32, test x$win32 = xtrue)

# As we could not yet auto-detect the GNOME desktop environment, it's the
# user's choice to enable GNOME integration or not.
AC_ARG_WITH([gnome],
            AS_HELP_STRING([--with-gnome],
               [integrate into the GNOME desktop environment [[default=no]]]),
            [ac_cv_with_gnome=$withval], [ac_cv_with_gnome=no])
AC_CACHE_CHECK([whether to integrate into the GNOME desktop environment],
               [ac_cv_with_gnome], [ac_cv_with_gnome=no])
if test "x$ac_cv_with_gnome" = "xyes" ; then
  AC_DEFINE([WITH_GNOME], 1,
    [Define whether to integrate into the GNOME desktop environment.])
fi
AM_CONDITIONAL(WITH_GNOME, test x$ac_cv_with_gnome != xno)

# Checks for libraries.
PKG_CHECK_MODULES([gobby], [libxml++-2.6 gtkmm-2.4 >= 2.6.0 net6-1.0 obby-1.0])

# Let the user choose if he wants to use gtksourceview or simple text buffers.
AC_ARG_WITH([gtksourceview],
            AS_HELP_STRING([--without-gtksourceview],
               [use GtkSourceView instead of TextView [[default=auto]]]),
	    [ac_cv_use_gtksourceview=$withval], [ac_cv_use_gtksourceview=auto])
AC_CACHE_CHECK([whether to use GtkSourceView], [ac_cv_use_gtksourceview],
	       [ac_cv_use_gtksourceview=auto])
if test "x$ac_cv_use_gtksourceview" != "xno" ; then
  PKG_CHECK_MODULES([gtksourceview], [gtksourceview-1.0],
                    [ac_cv_use_gtksourceview=yes],
                    [ac_cv_use_gtksourceview=no])
  if test "x$ac_cv_use_gtksourceview" = "xyes" ; then
    AC_DEFINE([WITH_GTKSOURCEVIEW], 1,
		  [Define whether to use SourceView instead of TextView.])
  fi
fi
AM_CONDITIONAL(WITH_GTKSOURCEVIEW, test x$ac_cv_use_gtksourceview != xno)

# Check for howl in libobby.
AC_CHECK_LIB(obby, obby_has_howl)
if test "x$ac_cv_lib_obby_obby_has_howl" = "xyes" ; then
	# We do not need any new flags as obby should take care of it.
	PKG_CHECK_MODULES([howl], [howl])
	AC_DEFINE([WITH_HOWL], 1, [Define whether to use howl support])
fi
AM_CONDITIONAL(WITH_HOWL, test x$ac_cv_lib_obby_obby_has_howl = xyes)

# Glib i18n/gettext support.
ALL_LINGUAS="de"
AM_GLIB_GNU_GETTEXT

GETTEXT_PACKAGE=$PACKAGE
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED([GETTEXT_PACKAGE], ["${GETTEXT_PACKAGE}"], [gettext domain])

AC_CONFIG_FILES([Makefile])
AC_OUTPUT([po/Makefile.in])

